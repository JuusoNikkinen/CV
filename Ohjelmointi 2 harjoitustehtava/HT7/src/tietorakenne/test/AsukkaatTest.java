package tietorakenne.test;
// Generated by ComTest BEGIN
import java.io.File;
import tietorakenne.*;
import java.util.ArrayList;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2024.04.26 12:21:06 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AsukkaatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa37 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa37() throws SailoException {    // Asukkaat: 37
    Asukkaat asukkaat = new Asukkaat(); 
    Asukas aku1 = new Asukas(), aku2 = new Asukas(); 
    assertEquals("From: Asukkaat line: 41", 0, asukkaat.getLkm()); 
    asukkaat.lisaa(aku1); 
    assertEquals("From: Asukkaat line: 43", 1, asukkaat.getLkm()); 
    asukkaat.lisaa(aku2); 
    assertEquals("From: Asukkaat line: 45", 2, asukkaat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista66 
   * @throws SailoException when error
   */
  @Test
  public void testPoista66() throws SailoException {    // Asukkaat: 66
    Asukkaat asukkaat = new Asukkaat(); 
    Asukas aku1 = new Asukas(), aku2 = new Asukas(); 
    assertEquals("From: Asukkaat line: 70", 0, asukkaat.getLkm()); 
    asukkaat.lisaa(aku1); 
    assertEquals("From: Asukkaat line: 72", 1, asukkaat.getLkm()); 
    asukkaat.lisaa(aku2); 
    assertEquals("From: Asukkaat line: 74", 2, asukkaat.getLkm()); 
    asukkaat.poista(aku1); 
    assertEquals("From: Asukkaat line: 77", 1, asukkaat.getLkm()); 
    asukkaat.poista(aku2); 
    assertEquals("From: Asukkaat line: 80", 0, asukkaat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta164 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta164() throws SailoException {    // Asukkaat: 164
    Asukkaat asukkaat = new Asukkaat(); 
    Asukas aku1 = new Asukas(), aku2 = new Asukas(); 
    aku1.taytaAkuAnkkaTiedoilla(); 
    aku2.taytaAkuAnkkaTiedoilla(); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto + "/asukkaat"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    asukkaat.lueTiedostosta(hakemisto); 
    fail("Asukkaat: 178 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    asukkaat.lisaa(aku1); 
    asukkaat.lisaa(aku2); 
    asukkaat.tallenna(hakemisto); 
    asukkaat = new Asukkaat();  // Poistetaan vanhat luomalla uusi
    asukkaat.lueTiedostosta(hakemisto);  // johon ladataan tiedot tiedostosta.
    assertEquals("From: Asukkaat line: 184", aku1.toString(), asukkaat.anna(0).toString()); 
    assertEquals("From: Asukkaat line: 185", aku2.toString(), asukkaat.anna(1).toString()); 
    try {
    asukkaat.anna(2); 
    fail("Asukkaat: 186 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    asukkaat.lisaa(aku2); 
    asukkaat.tallenna(hakemisto); 
    assertEquals("From: Asukkaat line: 189", true, ftied.delete()); 
    assertEquals("From: Asukkaat line: 190", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa223 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa223() throws SailoException,CloneNotSupportedException {    // Asukkaat: 223
    Asukkaat asukkaat = new Asukkaat(); 
    Asukas aku1 = new Asukas(), aku2 = new Asukas(); 
    aku1.rekisteroi(); aku2.rekisteroi(); 
    assertEquals("From: Asukkaat line: 229", 0, asukkaat.getLkm()); 
    asukkaat.korvaaTaiLisaa(aku1); assertEquals("From: Asukkaat line: 230", 1, asukkaat.getLkm()); 
    asukkaat.korvaaTaiLisaa(aku2); assertEquals("From: Asukkaat line: 231", 2, asukkaat.getLkm()); 
    Asukas aku3 = aku1.clone(); 
    aku3.setNimi("testiankka"); 
    asukkaat.korvaaTaiLisaa(aku3); 
    assertEquals("From: Asukkaat line: 235", 2, asukkaat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi256 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi256() throws SailoException {    // Asukkaat: 256
    Asukkaat asukkaat = new Asukkaat(); 
    Asukas asukas1 = new Asukas(); asukas1.parse("1 |1|Ankka Aku   |030201-111C   |A   | 2 |04013131313|akuankka@gmail.com|0|0.0|0.0|0|puheenjohtaja|"); 
    Asukas asukas2 = new Asukas(); asukas2.parse("2 |2|Ankka Tupu   |030201-111C   |A   | 2 |04013131313|akuankka@gmail.com|0|0.0|0.0|0|puheenjohtaja|"); 
    Asukas asukas3 = new Asukas(); asukas3.parse("3 |3|Susi Sepe    |030201-111C   |A   | 2 |04013131313|akuankka@gmail.com|0|0.0|0.0|0|puheenjohtaja|"); 
    Asukas asukas4 = new Asukas(); asukas4.parse("4 |4|Ankka Iines   |030201-111C   |A   | 2 |04013131313|akuankka@gmail.com|0|0.0|0.0|0|puheenjohtaja|"); 
    Asukas asukas5 = new Asukas(); asukas5.parse("5 |5|Ankka Roope   |030201-111C   |A   | 2 |04013131313|akuankka@gmail.com|0|0.0|0.0|0|puheenjohtaja|"); 
    asukkaat.lisaa(asukas1); asukkaat.lisaa(asukas2); asukkaat.lisaa(asukas3); asukkaat.lisaa(asukas4); asukkaat.lisaa(asukas5); 
    ArrayList<Asukas> loytyneet; 
    loytyneet = (ArrayList<Asukas>)asukkaat.etsi("s",2); 
    assertEquals("From: Asukkaat line: 268", 2, loytyneet.size()); 
    assertEquals("From: Asukkaat line: 269", true, loytyneet.get(0) == asukas3); 
    assertEquals("From: Asukkaat line: 270", true, loytyneet.get(1) == asukas4); 
  } // Generated by ComTest END
}